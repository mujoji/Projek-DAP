#Input Data
data <- read.csv("C:/Users/naura/Downloads/archive (1)/healthcare-dataset-stroke-data.csv")
View(data)
#Memilih variabel yang akan digunakan
library(dplyr)
data <- dplyr::select(data, age, hypertension, heart_disease, Residence_type, avg_glucose_level, smoking_status, stroke)
str(data)
#Mengubah variabel kategorikal menjadi numerik
data[,4] = sapply(data[,4], switch, "Rural"=0, "Urban"=1)
data[,6] = sapply(data[,6], switch, "formerly smoked"=0, "never smoked"=1, "smokes"=2, "Unknown"=3)
#Mengubah skala data dengan menjadi 0 sampai 1 pada tiap variabel menggunakan MinMax Scaller
for (i in names(data[,-7])) {
data[i] <- (data[i] - min(data[i]))/(max(data[i]) - min(data[i]))
}
View(data)
#Membagi data training dan data testing
set.seed(222)
index = sample(2, nrow(data), replace = TRUE, prob = c(0.75, 0.25))
datatraining = data[index==1,]
datatesting = data[index==2,]
#Membuat Model Neural Network
library(neuralnet)
set.seed(333)
NNsigmoid = neuralnet(stroke~., data = datatraining, hidden = 5, act.fct = 'logistic', linear.output = FALSE)
plot(NNsigmoid)
#Membuat Model Neural Network dengan act fct = tanh
set.seed(333)
NNtanh = neuralnet(stroke~., data = datatraining, hidden = 5, act.fct = 'tanh', linear.output = FALSE)
plot(NNtanh)
#Membuat Model Neural Network dengan act fct = ReLu
library(sigmoid)
set.seed(333)
NNrelu = neuralnet(stroke~., data = datatraining, hidden = 5, act.fct = relu, linear.output = FALSE)
plot(NNrelu)
#Melakukan prediksi menggunakan act fct = sigmoid
output1 = compute(NNsigmoid, datatesting[,-1])
head(output1$net.result)
head(datatraining[1,])
results1 <- data.frame(DataAsli=datatesting$stroke, Prediksi=output1$net.result)
results1
#Membulatkan results1 menggunakan package caret
library(caret)
roundedresults1 = sapply(results1, round, digits=0)
#Menampilkan data asli
actual <- round(datatesting$stroke, digits = 0)
#Menampilkan data prediksi
prediction1 <- round(output$net.result, digits = 0)
prediction1 <- round(output1$net.result, digits = 0)
actual1 <- round(datatesting$stroke, digits = 0)
#Mengidentifikasi data asli dan prediksi berdasarkan model ANN menggunakan confusion matrix
mtab = table(actual1, prediction1)
confusionMatrix(mtab)
#Melakukan prediksi menggunakan act fct = tanh
output2 = compute(NNtanh, datatesting[,-1])
head(output2$net.result)
head(datatraining[1,])
results2 = data.frame(DataAsli=datatesting$stroke, Prediksi =output2$net.result)
results2
#Membulatkan results2 menggunakan package caret
roundedresults2 = sapply(results2, round, digits=0)
#Menampilkan data asli
actual2 = round(datatesting$stroke, digits = 0)
#Menampilkan data prediksi
prediction2 = round(output2$net.result, digits = 0)
#Mengidentifikasi data asli dan prediksi berdasarkan model ANN 2 menggunakan confusion matrix
mtab2 = table(actual2, prediction2)
confusionMatrix(mtab2)
confusionMatrix(mtab)
confusionMatrix(mtab2)
mtab2
#Melakukan prediksi menggunakan act fct = relu
output3 = compute(NNrelu, datatesting[,-1])
head(output3$net.result)
head(datatraining[1,])
results3 = data.frame(DataAsli=datatesting$stroke, Prediksi=output3$net.result)
results3
#Membulatkan results3 menggunakan package caret
roundedresults3 = sapply(results3, round, digits=0)
#Menampilkan data asli
actual3 = round(datatesting$stroke, digits = 0)
#Menampilkan data prediksi
prediction3 = round(output3$net.result, digits = 0)
#Mengidentifikasi data asli dan prediksi berdasarkan model ANN 3 menggunakan confusion matrix
mtab3 = table(actual3, prediction3)
confusionMatrix(mtab3)
mtab3
savehistory("~/keperluan abang/R Studio/projekDAPIT/historynya.Rhistory")
